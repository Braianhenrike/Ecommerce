{"ast":null,"code":"import _slicedToArray from \"C:/Users/braia/Desktop/Ecommerce/Front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\braia\\\\Desktop\\\\Ecommerce\\\\Front\\\\src\\\\components\\\\Navbars\\\\AuthNavbar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport { Collapse, InputGroup, NavbarBrand, Navbar, Nav, Container, NavbarToggler } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserNavbar(props) {\n  _s();\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    collapseOpen = _React$useState2[0],\n    setcollapseOpen = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    modalSearch = _React$useState4[0],\n    setmodalSearch = _React$useState4[1];\n  var _React$useState5 = React.useState(\"navbar-transparent\"),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    color = _React$useState6[0],\n    setcolor = _React$useState6[1];\n  React.useEffect(function () {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  var updateColor = function updateColor() {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  var toggleCollapse = function toggleCollapse() {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  var toggleModalSearch = function toggleModalSearch() {\n    setmodalSearch(!modalSearch);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      className: classNames(\"\", color),\n      expand: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames(\"navbar-toggle d-inline\", {\n              toggled: props.sidebarOpened\n            }),\n            children: /*#__PURE__*/_jsxDEV(NavbarToggler, {\n              onClick: props.toggleSidebar,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavbarBrand, {\n            href: \"#pablo\",\n            onClick: function onClick(e) {\n              return e.preventDefault();\n            },\n            children: props.brandText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n          onClick: toggleCollapse,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-bar navbar-kebab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-bar navbar-kebab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-bar navbar-kebab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          navbar: true,\n          isOpen: collapseOpen,\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"ml-auto\",\n            navbar: true,\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"search-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"separator d-lg-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(UserNavbar, \"uhfLZd92F1HprQJ3qhBM3CeV9S8=\");\n_c = UserNavbar;\nexport default UserNavbar;\nvar _c;\n$RefreshReg$(_c, \"UserNavbar\");","map":{"version":3,"names":["React","classNames","Collapse","InputGroup","NavbarBrand","Navbar","Nav","Container","NavbarToggler","jsxDEV","_jsxDEV","Fragment","_Fragment","UserNavbar","props","_s","_React$useState","useState","_React$useState2","_slicedToArray","collapseOpen","setcollapseOpen","_React$useState3","_React$useState4","modalSearch","setmodalSearch","_React$useState5","_React$useState6","color","setcolor","useEffect","window","addEventListener","updateColor","cleanup","removeEventListener","innerWidth","toggleCollapse","toggleModalSearch","children","className","expand","fluid","toggled","sidebarOpened","onClick","toggleSidebar","fileName","_jsxFileName","lineNumber","columnNumber","href","e","preventDefault","brandText","navbar","isOpen","_c","$RefreshReg$"],"sources":["C:/Users/braia/Desktop/Ecommerce/Front/src/components/Navbars/AuthNavbar.js"],"sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Collapse,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  Nav,\n  Container,\n  NavbarToggler,\n} from \"reactstrap\";\n\nfunction UserNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <InputGroup className=\"search-bar\"></InputGroup>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default UserNavbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}