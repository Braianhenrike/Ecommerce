{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/braia/Desktop/dashbordTest/black-dashboard-genezio-main/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/braia/Desktop/dashbordTest/black-dashboard-genezio-main/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/braia/Desktop/dashbordTest/black-dashboard-genezio-main/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"C:/Users/braia/Desktop/dashbordTest/black-dashboard-genezio-main/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n* This is an auto generated code. This code should not be modified since the file can be overwriten \n* if new genezio commands are executed.\n*/\nfunction makeRequest(_x, _x2) {\n  return _makeRequest.apply(this, arguments);\n}\n/**\n * The class through which all request to the Genezio backend will be passed.\n * \n */\nfunction _makeRequest() {\n  _makeRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request, url) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return fetch(\"\".concat(url), {\n            keepalive: true,\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request)\n          });\n        case 2:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", response.json());\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _makeRequest.apply(this, arguments);\n}\nexport var Remote = /*#__PURE__*/function () {\n  function Remote(url) {\n    _classCallCheck(this, Remote);\n    this.url = undefined;\n    this.url = url;\n  }\n  _createClass(Remote, [{\n    key: \"call\",\n    value: function () {\n      var _call = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(method) {\n        var _len,\n          args,\n          _key,\n          requestContent,\n          response,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = _args[_key];\n              }\n              requestContent = {\n                \"jsonrpc\": \"2.0\",\n                \"method\": method,\n                \"params\": args,\n                \"id\": 3\n              };\n              _context.next = 4;\n              return makeRequest(requestContent, this.url);\n            case 4:\n              response = _context.sent;\n              if (!response.error) {\n                _context.next = 7;\n                break;\n              }\n              return _context.abrupt(\"return\", response.error.message);\n            case 7:\n              return _context.abrupt(\"return\", response.result);\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function call(_x3) {\n        return _call.apply(this, arguments);\n      }\n      return call;\n    }()\n  }]);\n  return Remote;\n}();","map":{"version":3,"names":["makeRequest","_x","_x2","_makeRequest","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","request","url","response","wrap","_callee2$","_context2","prev","next","fetch","concat","keepalive","method","headers","body","JSON","stringify","sent","abrupt","json","stop","Remote","_classCallCheck","undefined","_createClass","key","value","_call","_callee","_len","args","_key","requestContent","_args","_callee$","_context","length","Array","error","message","result","call","_x3"],"sources":["C:/Users/braia/Desktop/dashbordTest/black-dashboard-genezio-main/frontend/src/backend-sdk/remote.js"],"sourcesContent":["/**\n* This is an auto generated code. This code should not be modified since the file can be overwriten \n* if new genezio commands are executed.\n*/\n\nasync function makeRequest(request, url) {\n    const response = await fetch(`${url}`, {\n        keepalive: true,\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request),\n    });\n    return response.json();\n}\n\n/**\n * The class through which all request to the Genezio backend will be passed.\n * \n */\nexport class Remote {\n    url = undefined\n\n    constructor(url) {\n        this.url = url;\n    }\n\n    async call(method, ...args) {\n        const requestContent = {\"jsonrpc\": \"2.0\", \"method\": method, \"params\": args, \"id\": 3};\n        const response = await makeRequest(requestContent, this.url);\n\n        if (response.error) {\n            return response.error.message;\n        }\n\n        return response.result;\n    }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AAHA,SAKeA,WAAWA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAY1B;AACA;AACA;AACA;AAHA,SAAAF,aAAA;EAAAA,YAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAZA,SAAAC,SAA2BC,OAAO,EAAEC,GAAG;IAAA,IAAAC,QAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAAAF,SAAA,CAAAE,IAAA;UAAA,OACZC,KAAK,IAAAC,MAAA,CAAIR,GAAG,GAAI;YACnCS,SAAS,EAAE,IAAI;YACfC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,OAAO;UAChC,CAAC,CAAC;QAAA;UAPIE,QAAQ,GAAAG,SAAA,CAAAW,IAAA;UAAA,OAAAX,SAAA,CAAAY,MAAA,WAQPf,QAAQ,CAACgB,IAAI,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAb,SAAA,CAAAc,IAAA;MAAA;IAAA,GAAApB,QAAA;EAAA,CACzB;EAAA,OAAAN,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAMD,WAAayB,MAAM;EAGf,SAAAA,OAAYnB,GAAG,EAAE;IAAAoB,eAAA,OAAAD,MAAA;IAAA,KAFjBnB,GAAG,GAAGqB,SAAS;IAGX,IAAI,CAACrB,GAAG,GAAGA,GAAG;EAClB;EAACsB,YAAA,CAAAH,MAAA;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,KAAA,GAAA9B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAA6B,QAAWhB,MAAM;QAAA,IAAAiB,IAAA;UAAAC,IAAA;UAAAC,IAAA;UAAAC,cAAA;UAAA7B,QAAA;UAAA8B,KAAA,GAAArC,SAAA;QAAA,OAAAE,mBAAA,GAAAM,IAAA,UAAA8B,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAA5B,IAAA,GAAA4B,QAAA,CAAA3B,IAAA;YAAA;cAAA,KAAAqB,IAAA,GAAAI,KAAA,CAAAG,MAAA,EAAKN,IAAI,OAAAO,KAAA,CAAAR,IAAA,OAAAA,IAAA,WAAAE,IAAA,MAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA;gBAAJD,IAAI,CAAAC,IAAA,QAAAE,KAAA,CAAAF,IAAA;cAAA;cAChBC,cAAc,GAAG;gBAAC,SAAS,EAAE,KAAK;gBAAE,QAAQ,EAAEpB,MAAM;gBAAE,QAAQ,EAAEkB,IAAI;gBAAE,IAAI,EAAE;cAAC,CAAC;cAAAK,QAAA,CAAA3B,IAAA;cAAA,OAC7DjB,WAAW,CAACyC,cAAc,EAAE,IAAI,CAAC9B,GAAG,CAAC;YAAA;cAAtDC,QAAQ,GAAAgC,QAAA,CAAAlB,IAAA;cAAA,KAEVd,QAAQ,CAACmC,KAAK;gBAAAH,QAAA,CAAA3B,IAAA;gBAAA;cAAA;cAAA,OAAA2B,QAAA,CAAAjB,MAAA,WACPf,QAAQ,CAACmC,KAAK,CAACC,OAAO;YAAA;cAAA,OAAAJ,QAAA,CAAAjB,MAAA,WAG1Bf,QAAQ,CAACqC,MAAM;YAAA;YAAA;cAAA,OAAAL,QAAA,CAAAf,IAAA;UAAA;QAAA,GAAAQ,OAAA;MAAA,CACzB;MAAA,SAAAa,KAAAC,GAAA;QAAA,OAAAf,KAAA,CAAAhC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA6C,IAAA;IAAA;EAAA;EAAA,OAAApB,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}