{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/braia/Desktop/dashbordTest/black-dashboard-genezio-main/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/braia/Desktop/dashbordTest/black-dashboard-genezio-main/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/braia/Desktop/dashbordTest/black-dashboard-genezio-main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\braia\\\\Desktop\\\\dashbordTest\\\\black-dashboard-genezio-main\\\\frontend\\\\src\\\\backedComponents\\\\LineChart\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { LineChartView } from \"./LineChartView\";\nimport { chartExample2 } from \"variables/charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LineChart(props) {\n  _s();\n  var _React$useState = React.useState(undefined),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    chartData = _React$useState2[0],\n    setChartData = _React$useState2[1];\n  var _React$useState3 = React.useState(undefined),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    numberOfItems = _React$useState4[0],\n    setNumberOfItems = _React$useState4[1];\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    chartRef = _React$useState6[0],\n    setChartRef = _React$useState6[1];\n  React.useEffect(function () {\n    function getChartData() {\n      return _getChartData.apply(this, arguments);\n    }\n    function _getChartData() {\n      _getChartData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var canvas, data, ctx, gradientStroke, labels, chartData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              canvas = chartRef;\n              _context.next = 3;\n              return props.class.getChartData(localStorage.getItem(\"apiToken\"));\n            case 3:\n              data = _context.sent;\n              if (!data.success) {\n                console.log(\"error at get chart data\");\n                setChartData(\"Problem\");\n              } else {\n                ctx = canvas.ctx;\n                gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n                gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n                gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n                gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n                labels = data.labels;\n                chartData = data.data;\n                setNumberOfItems(data.numberOfItems);\n                setChartData({\n                  labels: labels,\n                  datasets: [{\n                    label: props.className,\n                    fill: true,\n                    backgroundColor: gradientStroke,\n                    borderColor: \"#1f8ef1\",\n                    borderWidth: 2,\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    pointBackgroundColor: \"#1f8ef1\",\n                    pointBorderColor: \"rgba(255,255,255,0)\",\n                    pointHoverBackgroundColor: \"#1f8ef1\",\n                    pointBorderWidth: 20,\n                    pointHoverRadius: 4,\n                    pointHoverBorderWidth: 15,\n                    pointRadius: 4,\n                    data: chartData\n                  }]\n                });\n              }\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _getChartData.apply(this, arguments);\n    }\n    if (!chartData && chartRef) {\n      getChartData();\n    }\n  }, [chartData, chartRef]);\n  return /*#__PURE__*/_jsxDEV(LineChartView, {\n    data: chartData,\n    options: chartExample2.options,\n    passedRef: function passedRef(newRef) {\n      return setChartRef(newRef);\n    },\n    dataName: props.dataName,\n    totalData: numberOfItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(LineChart, \"5fHtj9ORArkaH07kh30xHdHk4/E=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","LineChartView","chartExample2","jsxDEV","_jsxDEV","LineChart","props","_s","_React$useState","useState","undefined","_React$useState2","_slicedToArray","chartData","setChartData","_React$useState3","_React$useState4","numberOfItems","setNumberOfItems","_React$useState5","_React$useState6","chartRef","setChartRef","useEffect","getChartData","_getChartData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","canvas","data","ctx","gradientStroke","labels","wrap","_callee$","_context","prev","next","class","localStorage","getItem","sent","success","console","log","createLinearGradient","addColorStop","datasets","label","className","fill","backgroundColor","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","stop","options","passedRef","newRef","dataName","totalData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/braia/Desktop/dashbordTest/black-dashboard-genezio-main/frontend/src/backedComponents/LineChart/LineChart.js"],"sourcesContent":["import React from \"react\";\nimport { LineChartView } from \"./LineChartView\";\nimport { chartExample2 } from \"variables/charts\";\n\n\n\nexport function LineChart(props){\n    const [chartData, setChartData] = React.useState(undefined);\n    const [numberOfItems, setNumberOfItems] = React.useState(undefined);\n    const [chartRef, setChartRef] = React.useState(null);\n\n    React.useEffect(() => {\n        async function getChartData() {\n          const canvas = chartRef;\n          const data = await props.class.getChartData(localStorage.getItem(\"apiToken\"));\n          if (!data.success) {\n            console.log(\"error at get chart data\");\n            setChartData(\"Problem\");\n          } else { \n             \n            let ctx = canvas.ctx;\n    \n            let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    \n            gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n            gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n            gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n    \n            var labels = data.labels;\n            var chartData = data.data;\n            setNumberOfItems(data.numberOfItems)\n            setChartData({\n              labels: labels,\n              datasets: [\n                {\n                  label: props.className,\n                  fill: true,\n                  backgroundColor: gradientStroke,\n                  borderColor: \"#1f8ef1\",\n                  borderWidth: 2,\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  pointBackgroundColor: \"#1f8ef1\",\n                  pointBorderColor: \"rgba(255,255,255,0)\",\n                  pointHoverBackgroundColor: \"#1f8ef1\",\n                  pointBorderWidth: 20,\n                  pointHoverRadius: 4,\n                  pointHoverBorderWidth: 15,\n                  pointRadius: 4,\n                  data: chartData,\n                },\n              ],\n            });\n          }\n        }\n        if (!chartData && chartRef) {\n          getChartData();\n        }\n      }, [chartData, chartRef]); \n\n    return(\n        <LineChartView\n            data = {chartData}\n            options = {chartExample2.options}\n            passedRef = {newRef => setChartRef(newRef)}\n            dataName = {props.dataName}\n            totalData = {numberOfItems}\n        />\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}